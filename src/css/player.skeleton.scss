// -------------------
// COLOURS
//
// Declare the colour
// variables we'll use
// for our player.
// -------------------

$black: #555;
$white: #ffffff;
$grey: #ddd;

// ----------------------
// BOX SHADOW BARS
//
// This creates a pattern
// of repeating stripes &
// is used to provide the
// animated background of
// the loading indicator.
// ----------------------
@function basic_boxShadow ($n, $colour1, $colour2) {
    $value: 'inset #{$colour1} 0 0 0 0,';
    @for $i from 1 through $n {
        @if ($i % 2 != 0) {
            $value: '#{$value} inset #{$colour2} #{$i}em 0 0 0';
        } @else {
            $value: '#{$value} inset #{$colour1} #{$i}em 0 0 0';
        }
        @if ($i < $n) {
            $value: '#{$value}, ';
        }
    }
    @return unquote($value);
}

// ---------------------------
// SLIDE-RIGHT ANIMATION
//
// Simulates a pseudo-infinite
// slide-to-the-right effect &
// is used to animate the box-
// shadow background of the
// loading indicator.
// ---------------------------
@keyframes basic_slide {
    0% {
        transform: translateX(-2em);
    }
    100% {
        transform: translateX(0);
    }
}

// -------------
// PLAYER STYLES
//
// All rules are
// nested within
// a theme class
// name - making
// switching the
// themes easy.
// -------------
.skeleton.customAudioPlayer {
    // Global
    *,
    *:before,
    *:after {
        box-sizing: inherit;
    }
    font-size: 10px;
    position: relative;
    box-sizing: border-box;
    overflow: hidden;
    z-index: 1;

    // Wrapper
    margin: 1em 0;
    height: 4em;
    border: 0.1em solid $black;

    // The loading-state indicator
    .loader {
        position: absolute;
        bottom: 0;
        left: 4em;
        right: 0;
        height: 2em;
        overflow: hidden;
        opacity: 0;
        transition: opacity 0.2s;
        &:before {
            display: block;
            content: '';
            width: 200%;
            height: 100%;
            position: absolute;
            z-index: 1;
            top: 0%;
            left: 0%;
            transform-origin: center center;
            // Build a repeating striped background.
            box-shadow: basic_boxShadow(100, $black, $white);
            animation: basic_slide linear infinite 0.4s;
        }
    }

    // Only show the loader when we're loading
    &.loading .loader {
        opacity: 1;
    }

    // The play-pause button
    .playerTrigger {
        font-size: 1em;
        border: none;
        border-right: 0.1em solid $black;
        appearance: none;
        width: 4em;
        height: 4em;
        background: $white;
        position: absolute;
        top: 0;
        left: 0;
        cursor: pointer;
        .buttonText {
            display: none;
        }
        &:focus {
            outline: none;
        }

        // The "play" icon
        &:before {
            content: '';
            display: block;
            position: absolute;
            top: 50%;
            left: 50%;
            margin-top: -0.8em;
            margin-left: -0.4em;
            border-top: 0.8em solid transparent;
            border-left: 1em solid $black;
            border-bottom: 0.8em solid transparent;
        }

        // Hidden right side of "pause" icon (shown when paused)
        &:after {
            content: '';
            display: block;
            position: absolute;
            top: 50%;
            right: 50%;
            height: 1.4em;
            margin-top: -0.7em;
            margin-right: -0.7em;
            border-top: 0;
            border-left: 0.5em solid $black;
            border-bottom: 0;
            opacity: 0;
        }

        // The left side of the "pause" icon
        &.songPlaying:before {
            height: 1.4em;
            margin-top: -0.7em;
            margin-left: -0.7em;
            border-top: 0;
            border-left: 0.5em solid $black;
            border-bottom: 0;
        }

        // Make the right side visible
        &.songPlaying:after {
            opacity: 1;
        }
    }

    // Display song info
    .metaWrapper {
        padding: 0 1em 0 4.5em;
        height: 4em;
        overflow: hidden;
        background: $white;
        color: $black;
        line-height: 1.6;
        .titleDisplay {
            // font-size:1.4em;
            display: inline-block;
            line-height: 1;
            font-weight: bold;
            margin-right: 0.5em;
            font-family: monospace;
            &:after {
                content: ' â€“ ';
            }
        }
        .artistDisplay {
            // font-size:1.4em;
            font-family: monospace;
            display: inline-block;
            line-height: 1;
        }
    }

    // Display info about time-played and song-duration
    .timingsWrapper {
        position: absolute;
        bottom: 0;
        left: 10em;
        right: 0;
        height: 2em;
        border-left: 0.1em solid $black;
        .songPlayTimer,
        .songDuration {
            position: absolute;
            bottom: 0;
            z-index: 3;
            width: 6em;
            text-align: left;
            background: transparent;
            color: $black;
            line-height: 1;
            pointer-events: none;
            font-size: 1em;
            padding: 0 0.5em 0.5em 1em;
            font-family: monospace;
        }
        .songPlayTimer {
            left: 0;
        }
        .songDuration {
            right: 0;
            text-align: right;
        }
    }
    // Hide song-timings when we're loading
    &.loading .songPlayTimer,
    &.loading .songDuration {
        display: none;
    }

    // The "fake" range slider
    .progress-slider__wrapper {
        height: 2em;
        font-size: 1em;
        line-height: 1;
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        background: $white;
        overflow: hidden;
        border-top: 0.1em solid $black;
        // Make sure the real range element
        // is the same size as the fake one.
        // Position it on-top of the fake and
        // make it invisible (so we can still
        // get the functionality)
        .progress-slider__range {
            width: 100%;
            padding: 0;
            margin: 0;
            position: absolute;
            top: 0;
            left: 0;
            opacity: 0;
        }
        .progress-slider__progress-indicator {
            height: 2em;
            position: absolute;
            top: 0;
            left: 0;
            background: $grey;
            width: 0%;
        }
        .progress-slider__playhead {
            width: 0.5em;
            height: 2em;
            position: absolute;
            top: 0;
            left: 0%;
            margin-left: -0.2em;
            background: $black;
        }
    }

    // Hide dynamic elements until loading has finished
    &.loading .progress-slider__progress-indicator,
    &.loading .progress-slider__playhead {
        display: none;
    }

    // Make sure the range Track is the
    // right size and shape. Needs prefixed
    // versions to ensure cross-browser
    // consistency.
    input[type='range'].progress-slider__range::-webkit-slider-runnable-track {
        width: 100%;
        font-size: 1em;
        height: 2em;
        cursor: pointer;
    }
    input[type='range'].progress-slider__range::-moz-range-track {
        width: 100%;
        height: 2em;
        cursor: pointer;
    }
    input[type='range'].progress-slider__range::-ms-track {
        width: 100%;
        height: 2em;
        cursor: pointer;
    }

    // Position the volume controls
    .songVolume {
        position: absolute;
        bottom: 0;
        left: 4em;
        width: 6em;
        height: 2em;
        overflow: hidden;
        z-index: 2;
        border-top: 0.1em solid $black;
        background: $white;
        .songMuteButton {
            display: block;
            z-index: 2;
            float: left;
            width: 2em;
            height: 2em;
            font-size: 1em;
            color: transparent;
            border: 0;
            appearance: none;
            background: $white;
            position: relative;
            cursor: pointer;
            &:focus {
                outline: none;
            }

            // Rectangle part of "speaker cone" icon
            &:before {
                display: block;
                width: 0.5em;
                height: 0.4em;
                position: absolute;
                content: '';
                top: 50%;
                right: 50%;
                margin-right: -0.1em;
                transform: translateY(-50%);
                background: $black;
            }

            // Triangle part of "speaker cone" icon
            &:after {
                display: block;
                width: 0.5em;
                height: 0.5em;
                position: absolute;
                content: '';
                top: 50%;
                transform: translateY(-50%);
                right: 50%;
                margin-right: -0.2em;
                border-top: 0.5em solid transparent;
                border-right: 0.5em solid $black;
                border-bottom: 0.5em solid transparent;
            }

            // Change icon when muted
            &.songMuted {
                &:before {
                    background: $grey;
                }
                &:after {
                    border-right-color: $grey;
                }
            }
        }
    }

    .songVolumeValue {
        margin-left: 0.2em;
    }

    .songVolumeLabelWrapper {
        display: none;
    }

    // As with the playback indicator, we're
    // using a range element to power the
    // volume slider functionality
    .volume-slider__wrapper {
        display: block;
        height: 1em;
        position: relative;
        margin: 0.5em;
        left: 0;
        z-index: 3;
        background: $grey;
        width: 3em;
        float: left;
        // transform:rotate(90deg) translateY(-100%);
        transform: rotate(180deg);
        // transform-origin:top left;
        overflow: hidden;
        &:after {
            content: '';
            display: block;
            width: 100%;
            border-right: 3em solid $white;
            border-top: 1em solid transparent;
            position: absolute;
            top: 0;
            left: 0;
            pointer-events: none;
            // transform:rotate(180deg);
        }

        // Make sure the real range element
        // is the same size as the fake one.
        // Position it on-top of the fake and
        // make it invisible (so we can still
        // get the functionality)
        .volume-slider__range {
            width: 100%;
            padding: 0;
            margin: 0;
            height: 1em;
            position: absolute;
            top: 0;
            left: 0;
            opacity: 0;
            transform: rotate(180deg);
        }
        .volume-slider__progress-indicator {
            height: 1em;
            position: absolute;
            top: 0;
            right: 0;
            background: $black;
            width: 100%;
            // transform:rotate(180deg);
        }
        .volume-slider__playhead {
            display: none;
        }
    }

    // Make sure the range Track is the
    // right size and shape. Needs prefixed
    // versions to ensure cross-browser
    // consistency.
    input[type='range'].volume-slider__range::-webkit-slider-runnable-track {
        width: 100%;
        font-size: 1em;
        height: 1.5em;
        cursor: pointer;
    }
    input[type='range'].volume-slider__range::-moz-range-track {
        width: 100%;
        height: 1.5em;
        cursor: pointer;
    }
    input[type='range'].volume-slider__range::-ms-track {
        width: 100%;
        height: 1.5em;
        cursor: pointer;
    }
}
