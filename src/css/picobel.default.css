.default.picobel {
    --black: #555; /* (0, 0%, 33.3%) */
    --black--light: hsl(0, 0%, 43.3%);
    --black--opacity: rgba(0, 0, 0, 0.3);
    --white: #ffffff;
    --grey: #dad8d2; /* hsl(30, 10%, 85%) */
    --greyDark: hsl(30, 10%, 65%);
    --primary: #ddd;
    --primary--opacity: rgba(221, 221, 221, 0.4);
    --highlight: #00b7c6;
    --background_grey_dark: #e6e6e6;
    --background_grey_light: #f1f1f1;
    --focus: #015ecc;

    --progress-bar-height: 2em;
}

/* Simulates an infinite slide-to-the-right effect. */
@keyframes background_slide {
    0% {
        background-position: 0 0;
    }
    100% {
        background-position: 2em 0;
    }
}

/* Global */
.default.picobel {
    font-size: 10px;
    position: relative;
    box-sizing: border-box;
    z-index: 1;

    /* Wrapper */
    margin: 1em 0;
    height: 6em;
    border-radius: 0.3em;
    box-shadow: var(--black--opacity) 0 0.1em 0.2em 0;
    background-image: linear-gradient(
        var(--background_grey_light),
        var(--background_grey_dark)
    );
}

.default.picobel *,
.default.picobel *:before,
.default.picobel *:after {
    box-sizing: inherit;
}

.default.picobel *:focus {
    outline: 2px solid var(--focus);
    outline-offset: 1px;
    border-radius: 2px;
}

/* The loading-state indicator */
.default__loader {
    position: absolute;
    z-index: 2;
    bottom: 0;
    left: 5.6em;
    right: 0;
    height: var(--progress-bar-height);
    opacity: 0;
    transition: opacity 0.2s;
    pointer-events: none;
    background: linear-gradient(
        to right,
        var(--highlight) 50%,
        var(--black) 50%
    );
    background-size: var(--progress-bar-height) var(--progress-bar-height);
    background-repeat: repeat;
    background-position: 0 0;
    animation: background_slide linear infinite 0.4s;
}

/* Only show the loader when we're loading */
.default.loading .default__loader {
    opacity: 1;
}

/* The play-pause button */
.default__play-pause {
    font-size: 1em;
    border: none;
    appearance: none;
    width: 4em;
    height: 6em;
    color: var(--white);
    background: var(--black);
    background-image: linear-gradient(var(--black--light), var(--black));
    box-shadow: inset var(--black--light) -1px 0 0 0;
    position: absolute;
    top: 0;
    left: 0;
    cursor: pointer;
}
.default__play-pause:focus {
    z-index: 3;
}
.default__play-pause__text {
    display: none;
}

/* The "play" icon */
.default__play-pause:before {
    content: "";
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    margin-top: -0.8em;
    margin-left: -0.4em;
    border-top: 0.8em solid transparent;
    border-left: 1em solid var(--white);
    border-bottom: 0.8em solid transparent;
}

/* Hidden right side of "pause" icon (shown when paused) */
.default__play-pause:after {
    content: "";
    display: block;
    position: absolute;
    top: 50%;
    right: 50%;
    height: 1.4em;
    margin-top: -0.7em;
    margin-right: -0.7em;
    border-top: 0;
    border-left: 0.5em solid var(--white);
    border-bottom: 0;
    opacity: 0;
}

/* The left side of the "pause" icon */
.default__play-pause.playing:before {
    height: 1.4em;
    margin-top: -0.7em;
    margin-left: -0.7em;
    border-top: 0;
    border-left: 0.5em solid var(--white);
    border-bottom: 0;
}

/* Make the right side visible */
.default__play-pause.playing:after {
    opacity: 1;
}

/* Display song info */
.default__wrapper--title-artist {
    padding: 1em 2em 1em 7em;
    height: 4.4em;
    background: var(--primary);
    color: var(--black);
    text-shadow: var(--white) 0 0.1em 0;
    background-image: linear-gradient(
        var(--background_grey_light),
        var(--background_grey_dark)
    );
}
.default__title {
    display: inline-block;
    line-height: 1;
    font-weight: bold;
    font-family: monospace;
}

.default__artist {
    font-family: monospace;
    display: inline-block;
    line-height: 1;
    margin-left: 0.5em;
}
.default__artist:not(:empty):before {
    content: " â€“ ";
}

/* Display info about time-played and song-duration */
.default__wrapper--timer-progress-duration {
    position: absolute;
    bottom: 0;
    left: 5.6em;
    right: 0;
    height: var(--progress-bar-height);
}
.default__timer,
.default__duration {
    position: absolute;
    top: 0;
    z-index: 3;
    width: 6em;
    text-align: left;
    background: transparent;
    color: var(--white);
    line-height: 1em;
    height: var(--progress-bar-height);
    pointer-events: none;
    font-size: 1em;
    padding: 0.5em 0.5em 0.5em 1em;
    font-family: monospace;
}
.default__timer {
    left: 0;
}
.default__duration {
    right: 0;
    text-align: right;
}

/* Hide song-timings when we're loading */
.default.loading .default__timer,
.default.loading .default__duration {
    display: none;
}

/* Progress slider positioner */
.default__progress-slider__wrapper {
    height: var(--progress-bar-height);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
}
/* The "fake" range slider */
.default__progress-slider__replacement {
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    background: var(--black);
    border-bottom-right-radius: 0.2em;
    overflow: hidden;
}
.default__progress-slider__replacement.focus {
    outline: 2px solid var(--focus);
    outline-offset: 1px;
    border-radius: 2px;
}
.default__progress-slider__indicator {
    height: var(--progress-bar-height);
    position: absolute;
    top: 0;
    left: 0;
    background: var(--primary--opacity);
    width: 0%;
}
.default__progress-slider__playhead {
    width: 0.5em;
    height: var(--progress-bar-height);
    position: absolute;
    top: 0;
    left: 0%;
    margin-left: -0.2em;
    background: var(--highlight);
}

/* Hide dynamic elements until loading has finished */
.default.loading .default__progress-slider__indicator,
.default.loading .default__progress-slider__playhead {
    display: none;
}

/* Make sure the real range element is the same size as the fake one. Position it on-top of the fake and make it invisible (so we can still get the functionality) */
.default__progress-slider__range {
    width: 100%;
    height: var(--progress-bar-height);
    font-size: inherit;
    padding: 0;
    margin: 0;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
}
/* Make sure the range Track is the right size and shape. Needs prefixed versions to ensure cross-browser consistency. */
.default__progress-slider__range::-webkit-slider-runnable-track {
    width: 100%;
    font-size: 1em;
    height: 2em;
    cursor: pointer;
}
.default__progress-slider__range::-moz-range-track {
    width: 100%;
    height: 2em;
    cursor: pointer;
}
.default__progress-slider__range::-ms-track {
    width: 100%;
    height: 2em;
    cursor: pointer;
}

/* Position the volume controls */
.default__wrapper--mute-volume {
    position: absolute;
    top: 0;
    left: 4em;
    width: 1.6em;
    height: 6em;
    /* overflow: hidden; */
    z-index: 2;
}
.default__mute {
    display: block;
    width: 1.6em;
    height: 1.6em;
    font-size: 1em;
    color: transparent;
    border: 0;
    appearance: none;
    background: var(--black);
    position: absolute;
    top: 0;
    right: 0;
    cursor: pointer;
    overflow: hidden;
}

/* Rectangle part of "speaker cone" icon */
.default__mute:before {
    display: block;
    width: 0.4em;
    height: 0.3em;
    position: absolute;
    content: "";
    top: 50%;
    right: 50%;
    margin-right: -0.1em;
    transform: translateY(-50%);
    background: var(--white);
}

/* Triangle part of "speaker cone" icon */
.default__mute:after {
    display: block;
    width: 0.4em;
    height: 0.4em;
    position: absolute;
    content: "";
    top: 50%;
    margin-top: -0.4em;
    right: 50%;
    margin-right: -0.2em;
    border-top: 0.4em solid transparent;
    border-right: 0.4em solid var(--white);
    border-bottom: 0.4em solid transparent;
}

/* Change icon when muted */
.default__mute.muted:before {
    background: var(--grey);
}
.default__mute.muted:after {
    border-right-color: var(--grey);
}

.default__volume-label {
    display: none;
}

/* As with the playback indicator, we're using a range element to power the volume slider functionality */
.default__volume-slider__wrapper {
    display: block;
    height: 1.6em;
    position: absolute;
    top: 1.6em;
    left: 0;
    z-index: 3;
    width: 4.4em;
    transform: rotate(90deg) translateY(-100%);
    transform-origin: top left;
}
.default__volume-slider__replacement {
    display: block;
    height: 1.6em;
    position: absolute;
    top: 0;
    left: 0;
    background: var(--greyDark);
    width: 4.4em;
}
.default__volume-slider__replacement:after {
    content: "";
    display: block;
    width: 100%;
    border-right: 4.4em solid var(--black);
    border-bottom: 1.6em solid transparent;
    position: absolute;
    bottom: 0;
    left: 0;
    pointer-events: none;
}
.default__volume-slider__replacement.focus {
    outline: 2px solid var(--focus);
    outline-offset: 1px;
    border-radius: 2px;
}

.default__volume-slider__indicator {
    height: 1.6em;
    position: absolute;
    top: 0;
    right: 0;
    background: var(--highlight);
    width: 100%;
    transform: rotate(180deg);
}
.default__volume-slider__playhead {
    display: none;
}

/* Make sure the real range element is the same size as the fake one. Position it on-top of the fake and make it invisible (so we can still get the functionality) */
.default__volume-slider__range {
    width: 100%;
    padding: 0;
    margin: 0;
    height: 1.6em;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0;
    transform: rotate(180deg);
}

/* Make sure the range Track is the right size and shape. Needs prefixed versions to ensure cross-browser consistency. */
.default__volume-slider__range::-webkit-slider-runnable-track {
    width: 100%;
    font-size: 1em;
    height: 1.5em;
    cursor: pointer;
}
.default__volume-slider__range::-moz-range-track {
    width: 100%;
    height: 1.5em;
    cursor: pointer;
}
.default__volume-slider__range::-ms-track {
    width: 100%;
    height: 1.5em;
    cursor: pointer;
}
