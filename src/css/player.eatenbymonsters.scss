// -------------------
// COLOURS
//
// Declare the colour
// variables we'll use
// for our player.
// -------------------

$black: #555;
$white: #ffffff;
$grey: #dad8d2;
$greyDark: darken($grey, 20%);
$primary: #00b7c6;

// -------------------
// BOX SHADOW BARS
//
// Use box-shadow to
// create a pattern of
// repeating stripes.
// -------------------
@function basic_boxShadow ($n, $colour1, $colour2) {
    $value: 'inset #{$colour1} 0 0 0 0,';
    @for $i from 1 through $n {
        @if ($i % 2 != 0) {
            $value: '#{$value} inset #{$colour2} #{$i}em 0 0 0';
        } @else {
            $value: '#{$value} inset #{$colour1} #{$i}em 0 0 0';
        }
        @if ($i < $n) {
            $value: '#{$value}, ';
        }
    }
    @return unquote($value);
}

// --------------------
// SLIDE ANIMATION
//
// Simulate an infinite
// slide-to-the-right
// effect.
// --------------------
@keyframes basic_slide {
    0% {
        transform: translateX(-2em);
    }
    100% {
        transform: translateX(0);
    }
}

// Next all rules inside our custom class:
.eatenbymonsters.customAudioPlayer {
    // Global
    *,
    *:before,
    *:after {
        box-sizing: inherit;
    }

    // Wrapper
    margin: 2em 0;
    position: relative;
    overflow: hidden;
    box-sizing: border-box;
    height: 6em;

    // The loading-state indicator
    .loader {
        width: 100%;
        position: absolute;
        bottom: 0;
        left: 0;
        height: 2em;
        overflow: hidden;
        opacity: 0;
        transition: opacity 0.2s;
        &:before {
            display: block;
            content: '';
            width: 200%;
            height: 100%;
            position: absolute;
            z-index: 1;
            top: 0%;
            left: 0%;
            transform-origin: center center;
            box-shadow: basic_boxShadow(100, $primary, darken($primary, 10%));
            animation: basic_slide linear infinite 0.4s;
        }
    }

    // Only show the loader when we're loading
    &.loading .loader {
        opacity: 1;
    }

    // The play-pause button
    .playerTrigger {
        border: none;
        appearance: none;
        width: 3em;
        height: 4em;
        font-size: 1em;
        color: $white;
        background: $black;
        position: absolute;
        top: 0;
        left: 0;
        cursor: pointer;
        .buttonText {
            display: none;
        }
        &:focus {
            outline: none;
        }
        // The "play" icon
        &:before {
            content: '';
            display: block;
            position: absolute;
            top: 50%;
            left: 50%;
            margin-top: -0.6em;
            margin-left: -0.25em;
            border-top: 0.6em solid transparent;
            border-left: 0.8em solid $white;
            border-bottom: 0.6em solid transparent;
        }
        // Hidden right side of "pause" icon (shown when paused)
        &:after {
            content: '';
            display: block;
            position: absolute;
            top: 50%;
            right: 50%;
            height: 1em;
            margin-top: -0.5em;
            margin-right: -0.5em;
            border-top: 0;
            border-left: 0.4em solid $white;
            border-bottom: 0;
            opacity: 0;
        }
        // The left side of the "pause" icon
        &.songPlaying:before {
            height: 1em;
            margin-top: -0.5em;
            margin-left: -0.5em;
            border-top: 0;
            border-left: 0.4em solid $white;
            border-bottom: 0;
        }
        // Make the right side visible
        &.songPlaying:after {
            opacity: 1;
        }
    }

    // Display song info
    .metaWrapper {
        padding: 0.5em 1.5em 0.5em 3.5em;
        height: 4em;
        overflow: auto;
        background: $primary;
        background: rgba($primary, 0.3);
        .titleDisplay {
            display: block;
            line-height: 1;
            font-weight: bold;
        }
        .artistDisplay {
            display: block;
            line-height: 1;
        }
    }

    // Display info about time-played and song-duration
    .timingsWrapper {
        position: absolute;
        width: 100%;
        bottom: 0;
        left: 0;
        height: 2em;
        background: red;
        .songPlayTimer,
        .songDuration {
            position: absolute;
            top: 0;
            z-index: 3;
            width: 4em;
            text-align: center;
            background: transparent;
            color: $white;
            line-height: 2;
            height: 2em;
            pointer-events: none;
        }
        .songPlayTimer {
            left: 0;
        }
        .songDuration {
            right: 0;
        }
    }
    // ...and hide them when we're loading
    &.loading .songPlayTimer,
    &.loading .songDuration {
        display: none;
    }

    // The "fake" range slider
    .progress-slider__wrapper {
        height: 2em;
        font-size: 1em;
        line-height: 1;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        background: $black;
        overflow: hidden;
        // Make sure the real range element
        // is the same size as the fake one.
        // Position it on-top of the fake and
        // make it invisible (so we can still
        // get the functionality)
        .progress-slider__range {
            width: 100%;
            padding: 0;
            margin: 0;
            position: absolute;
            top: 0;
            left: 0;
            opacity: 0;
        }
        .progress-slider__progress-indicator {
            height: 2em;
            position: absolute;
            top: 0;
            left: 0;
            background: rgba($primary, 0.4);
            width: 0%;
        }
        .progress-slider__playhead {
            width: 1em;
            height: 2em;
            position: absolute;
            top: 50%;
            left: 0%;
            margin-top: -1em;
            margin-left: -0.5em;
            background: $primary;
        }
    }
    // Hide dynamic elements until loading has finished
    &.loading .progress-slider__progress-indicator,
    &.loading .progress-slider__playhead {
        display: none;
    }

    // Make sure the range Track is the
    // right size and shape. Needs prefixed
    // versions to ensure cross-browser
    // consistency.
    input[type='range'].progress-slider__range::-webkit-slider-runnable-track {
        width: 100%;
        font-size: 1em;
        height: 2.2em;
        cursor: pointer;
    }
    input[type='range'].progress-slider__range::-moz-range-track {
        width: 100%;
        height: 2em;
        cursor: pointer;
    }
    input[type='range'].progress-slider__range::-ms-track {
        width: 100%;
        height: 2em;
        cursor: pointer;
    }

    // Position the volume controls
    .songVolume {
        position: absolute;
        top: 0;
        right: 0;
        width: 1.5em;
        height: 4em;
        overflow: hidden;
        z-index: 2;
        .songMuteButton {
            display: block;
            width: 1.5rem;
            height: 1.5rem;
            font-size: 0;
            border: 0;
            appearance: none;
            background: $black;
            position: absolute;
            top: 0;
            right: 0;
            cursor: pointer;
            // Rectangle part of "speaker cone" icon
            &:before {
                display: block;
                width: 0.4rem;
                height: 0.3rem;
                position: absolute;
                content: '';
                top: 50%;
                right: 50%;
                margin-right: -0.1rem;
                transform: translateY(-50%);
                background: $white;
            }
            // Triangle part of "speaker cone" icon
            &:after {
                display: block;
                width: 0.4rem;
                height: 0.4rem;
                position: absolute;
                content: '';
                top: 50%;
                margin-top: -0.4rem;
                right: 50%;
                margin-right: -0.2rem;
                border-top: 0.4rem solid transparent;
                border-right: 0.4rem solid $white;
                border-bottom: 0.4rem solid transparent;
            }
            // Change icon when muted
            &.songMuted {
                &:before {
                    background: $grey;
                }
                &:after {
                    border-right-color: $grey;
                }
            }
        }
    }

    .songVolumeValue {
        margin-left: 0.2em;
    }

    .songVolumeLabelWrapper {
        display: none;
    }

    // As with the playback indicator, we're
    // using a range element to power the
    // volume slider functionality
    .volume-slider__wrapper {
        display: block;
        height: 1.5em;
        position: absolute;
        top: 0;
        left: 0;
        z-index: 3;
        background: $greyDark;
        width: 2.5em;
        transform: rotate(90deg);
        transform-origin: bottom left;
        // Make sure the real range element
        // is the same size as the fake one.
        // Position it on-top of the fake and
        // make it invisible (so we can still
        // get the functionality)
        .volume-slider__range {
            width: 100%;
            padding: 0;
            margin: 0;
            height: 1.5em;
            position: absolute;
            top: 0;
            left: 0;
            opacity: 0;
            transform: rotate(180deg);
        }
        .volume-slider__progress-indicator {
            height: 1.5em;
            position: absolute;
            top: 0;
            right: 0;
            background: $primary;
            width: 100%;
            transform: rotate(180deg);
        }
        .volume-slider__playhead {
            display: none;
        }
    }

    // Make sure the range Track is the
    // right size and shape. Needs prefixed
    // versions to ensure cross-browser
    // consistency.
    input[type='range'].volume-slider__range::-webkit-slider-runnable-track {
        width: 100%;
        font-size: 1em;
        height: 1.5em;
        cursor: pointer;
    }
    input[type='range'].volume-slider__range::-moz-range-track {
        width: 100%;
        height: 1.5em;
        cursor: pointer;
    }
    input[type='range'].volume-slider__range::-ms-track {
        width: 100%;
        height: 1.5em;
        cursor: pointer;
    }
}
